import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class InMemoryTaskManagerTest {

    //InMemoryTaskManager действительно добавляет задачи разного типа и может найти их по id;
    @Test
    public void testAddAndFindTasks() {

        TaskManager taskManager = new InMemoryTaskManager();

        // Создаем задачи разных типов
        Task task = new Task("Тестовая задача", "sdelay task", Status.NEW);
        taskManager.addTask(task);
        Epic epic = new Epic("Тестовый эпик", "sdelay Epic");
        taskManager.addEpic(epic);
        SubTask subtask = new SubTask("Тестовая подзадача", "sdelay sub", Status.NEW, epic.getTaskId());
        taskManager.addSubTask(subtask);

        // Проверяем, что задачи добавлены и могут быть найдены по идентификатору
        assertEquals(task, taskManager.getTask(task.getTaskId()), "Задача должна быть найдена");
        assertEquals(subtask, taskManager.getSubTask(subtask.getTaskId()), "Подзадача должна быть найдена");
        assertEquals(epic, taskManager.getEpic(epic.getTaskId()), "Эпик должен быть найден");
    }

    //задачи с заданным id и сгенерированным id не конфликтуют внутри менеджера;
    @Test
    public void testManualAndAutoGeneratedIDs() {

        TaskManager taskManager = new InMemoryTaskManager();

        // Создаем задачу с установленным идентификатором
        Task manualTask = new Task(12, "Тестовая задача", "sdelay task", Status.IN_PROGRESS);
        taskManager.addTask(manualTask);

        // Создаем задачу с автоматически сгенерированным идентификатором
        Task autoTask = new Task("Тестовая 1", "sdelay task1", Status.NEW);
        taskManager.addTask(autoTask);

        // Проверяем, что задачи добавились и могут быть найдены
        assertEquals(manualTask, taskManager.getTask(manualTask.getTaskId()), "Задача с заданным id должна быть найдена");
        assertEquals(autoTask, taskManager.getTask(autoTask.getTaskId()), "Задача с автосгенерированным id должна быть найдена");
    }

    //проверяется неизменность задачи (по всем полям) при добавлении задачи в менеджер
    @Test
    public void testTaskImmutabilityAfterAddition() {

        TaskManager taskManager = new InMemoryTaskManager();

        // Создаем задачу с начальными значениями полей
        Task originalTask = new Task("Тестовая 35", "sdelay task8", Status.NEW);

        // Добавляем задачу в менеджер
        taskManager.addTask(originalTask);

        // Проверяем, что все поля остались неизменными
        assertEquals("Тестовая 35", originalTask.getTaskName(), "Название задачи не должно меняться");
        assertEquals("sdelay task8", originalTask.getTaskDescription(), "Статус задачи не должен меняться");
        assertEquals(Status.NEW, originalTask.getTaskStatus(), "Приоритет задачи не должен меняться");
    }

}